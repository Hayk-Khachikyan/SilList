@model SO.Utility.Models.ViewModels.SearchFilterVm
@using SO.SilList.Manager.Models.ValueObjects;
@using SO.SilList.Manager.Models.ViewModels;
@using SO.Utility.Extensions;
@using SO.SilList.Manager;
@{
    var result = Model.result.convertTo<PropertyVo>();            
}
         

<form id="filterForm" class="form-inline" method="get" action="@Url.Action("Index", "Property")">

    @Html.HiddenFor(model => model.propertyListingTypeId)
    @Html.ValidationSummary(true)
    @Html.ValidationMessageFor(model => model.keyword)

    <div class="search-title">
        Search Listings
    </div> 
    <br /><hr />
    <div>
        @Html.TextBoxFor(model => model.keyword, new { Class = "input-medium pull-left", placeholder = "Keyword" })
        <br /><br />
        @Html.TextBoxFor(model => model.filter_cityTypeId, new { Class = "input-medium pull-left", placeholder = "City, State" })
        <br /><br />
        @Html.TextBoxFor(model => model.filter_zip, new { Class = "input-medium pull-left", placeholder = "Zip Code" })
        <br /><br />
    </div>

    <div>
        <button id="btnSearch" name="submitButton" value="Search" class="btn btn-default pull-right"><i class="icon-search"></i></button>
        <br /><br />
    </div>

    <hr/>
    @Html.Action("SelectList", "Property", new { id = Model.propertyListingTypeId, propertyName = "propertyListingTypeId", propertyType = typeof(PropertyListingTypeVo) })
    @Html.Action("SelectList", "Property", new { id = Model.propertyTypeId, propertyName = "propertyTypeId", propertyType = typeof(PropertyTypeVo) })
    @*<ul class="nav nav-pills">
        <li><a href="#">Sell</a></li>
        <li><a href="#">Buy</a></li>
        <li><a href="#">Rent</a></li>
    </ul>*@
    <hr />



</form>