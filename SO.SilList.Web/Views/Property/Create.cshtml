@model SO.SilList.Manager.Models.ValueObjects.PropertyVo
@using SO.SilList.Manager.Models.ValueObjects
@{
    ViewBag.Title = "Submit Property Listing";
    Layout = "~/Views/Shared/_LayoutProperty.cshtml";
}
<style>
    .info Select, input {
        padding: 1px;
        border-radius: 6px;
        width: 100%;
    }

    .labels {
        text-align: center;
        text-anchor: middle;
        text-align-last: center;
        padding-top: 3px;
    }

    .shortEditor {
        width: 80px;
    }
</style>

   

    <script>
        var firstImage = true;
        var imageCount = 0;

        function removePic() {
            var gallery = Galleria.get(0); // gallery is now the first galleria instance

            if (firstImage == false) {
                $(gallery.getData(gallery.getIndex()).link).remove("");
                gallery.splice(gallery.getIndex(), 1);
                if (gallery.getDataLength() <= 1) {
                    gallery.push({ image: "/Images/houseImage.jpg" });
                    firstImage = true;
                    gallery.show(0);       
                }
                gallery.show(0);
                gallery.refreshImage();
            }
        }
        function addPic2() {
            var addImageData = "<div id='addNewImage'></div>";
            addImageData += "<input hidden='hidden' id='loadFile" + (imageCount + 1) + "' type='file' name='UploadImage" + (imageCount + 1) + "' accept='image/*' />";
            $("#loadFile" + imageCount).trigger('click');
            
            var filename = $("#loadFile" + imageCount).val();
            if (($("#addImage").val() != filename) && (filename.indexOf(".jpg", 0) > 0 || filename.indexOf(".bmp", 0) > 0 || filename.indexOf(".jpeg", 0) > 0 || filename.indexOf(".png", 0) > 0 || filename.indexOf(".gif", 0) > 0)) {
                
                addPic(filename);
                imageCount++;
                firstImage = false;
                $("#addNewImage").replaceWith(addImageData);
                document.getElementById("addImage").setAttribute("value", filename);
            }

            
            return false;
        }

        function addPic(data) {
            var gallery = Galleria.get(0); // gallery is now the first galleria instance
            //gallery.play();
            gallery.setOptions('dummy', '/Images/houseImage.jpg');
            gallery.push({ image: data ,link: ("#loadFile"+imageCount)});
            
           // gallery.show(gallery.getDataLength()+1);
            if (firstImage) {
               gallery.splice(0, 1);
                gallery.refreshImage();
                gallery.show(gallery.getDataLength());
            }
            gallery.show(gallery.getDataLength());
        }
        // Load the classic theme
        
        Galleria.loadTheme('@Url.Content("~")Scripts/galleria/galleria.classic.js');

        // Initialize Galleria
        Galleria.run('#galleria', {
            
            extend: function (options) {

                Galleria.log(this) // the gallery instance
                Galleria.log(options) // the gallery options
                Galleria.configure({
                    imageCrop: false,
                    transition: 'fade'
                });
                // listen to when an image is shown
                this.bind('image', function (e) {

                    Galleria.log(e) // the event object may contain custom objects, in this case the main image
                    Galleria.log(e.imageTarget) // the current image

                    // lets make galleria open a lightbox when clicking the main image:
                    $(e.imageTarget).click(this.proxy(function () {
                        this.openLightbox();
                    }));
                });
            }
        });

    </script>




@using (Html.BeginForm("Create", "Property", FormMethod.Post, new { @encType = "multipart/form-data" }))
{
 
     <div class="span12" style="color: red" >  
            <b>
                @Html.ValidationSummary(true, "***Error: Please make sure Zip Code, Phone Number or Fax number format are correct!")
            </b>         
        </div>
    
    
    <div class="row" style="margin: 5px;">
        <div class="span10 form-horizontal-left" >
            @Html.LabelFor(model => model.title)
            @Html.TextBoxFor(model => model.title, new { Class = "input-xxlarge", placeholder = "Title" })
        </div>

    </div>
    
     <div class="row" style="margin: 5px;">
         <div class="span6 form-horizontal-left" >

              <div class="control-group">
                  <div class="control-label">
                       @Html.LabelFor(model => model.bedroomTypeId)
                  </div>
                  <div class="controls">
                      @Html.Action("DropDownList", "Property", new { id = Model.bedroomTypeId, propertyName = "bedroomTypeId", propertyType = typeof(BedroomTypeVo) })
                  </div>
                  @*<div  class="span5">
                 </div>*@
             </div>

             <div class="control-group">
                 <div class="control-label">
                      @Html.LabelFor(model => model.bathroomTypeId)
                 </div>
                 <div class="controls">
                     @Html.Action("DropDownList", "Property", new { id = Model.bathroomTypeId, propertyName = "bathroomTypeId", propertyType = typeof(BathroomTypeVo) })
                 </div>
             </div> 
                    
             <div class="control-group">
                  <div class="control-label">
                      @Html.LabelFor(model => model.price)
                  </div>
                  <div class="controls">
                      @Html.TextBoxFor(model => model.price, new { Class = "input-small", placeholder = " $" })
                      @Html.ValidationMessageFor(model => model.price)
                  </div>
             </div>  
         </div>

         <div class="span6 form-horizontal-left" >
             <div class="control-group">
                <div class="control-label">
                     @Html.LabelFor(model => model.size)
                </div>
                <div class="controls">
                    @Html.TextBoxFor(model => model.size, new { Class = "input-small", placeholder = " sq ft" })
                    @Html.ValidationMessageFor(model => model.size)
                </div>
            
                <div class="control-label">
                    @Html.LabelFor(model => model.lotSize)
                </div>
                <div class="controls">
                    @Html.TextBoxFor(model => model.lotSize, new { Class = "input-small", placeholder = " sq ft" }) 
                    @Html.ValidationMessageFor(model => model.lotSize)
                </div>
            
                <div class="control-label">
                     @Html.LabelFor(model => model.isPetAllowedTypeId)
                </div>
                 <div class="controls">
                     @Html.Action("DropDownList", new { id = Model.isPetAllowedTypeId, propertyName = "isPetAllowedTypeId", propertyType = typeof(IsPetAllowedTypeVo) })
                 </div>
                 <div class="control-label">
                     @Html.LabelFor(model => model.acceptsSection8TypeId)
                </div>
                 <div class="controls">
                     @Html.Action("DropDownList", new { id = Model.acceptsSection8TypeId, propertyName = "acceptsSection8TypeId", propertyType = typeof(AcceptsSection8TypeVo) })
                 </div>
                @*<div class="controls">
                    @Html.HiddenFor(model => model.isPetAllowedTypeId)
                    @{
                        var mylist = new string[3];
                        mylist.SetValue("N/A", 0);
                        mylist.SetValue("Yes", 1);
                        mylist.SetValue("No", 2);

                        var selectlist = new SelectList(mylist);
                        
                        var mylist2 = new List<Object>
                        { new { value = '0' , text = "N/A"  },
                          new { value = '1' , text = "Yes" },
                          new { value = '2' , text = "No"}
                        };
                        var selectlist2 = new SelectList(mylist2, "value", "text");
                        
                    }
                    @Html.DropDownListFor(model => model.isPetAllowedTypeId, selectlist2)
                </div>*@
            </div>
         </div>
    
    </div> 
    <br />

    <div class="row" style="height: 400px; margin: 5px;">
        <div class="span8" style="height: 400px; border-radius: 6px;">
            <div style="border: inset; border-color: #808080; height: 180px; border-radius: 6px; margin-bottom: 5px">
                <b style="font-size: medium; font-style: italic; margin: 10px; padding: 5px; border-bottom: 1px solid #ccc;">Location & Contact Info</b>

                <div style="margin: 5px; height: 60px; margin-left: 10px">

                    <b>Address:</b>
                    @Html.TextBoxFor(model => model.address, new { placeholder = "Address", style = "width:80%;margin-top:5px" })
                    <div class="info">
                        <div class="span2">
                            <b>Country:</b>
                        </div>                                            
                        <div class="span10">
                            @Html.Action("DropDownList", new { id = Model.countryTypeId, propertyName = "countryTypeId", propertyType = typeof(CountryTypeVo), defaultValue = "Select Country" })
                        </div>
                        @*<div class="span6">
                            @Html.Action("DropDownList", new { id = Model.stateTypeId, propertyName = "stateTypeId", propertyType = typeof(StateTypeVo), defaultValue = "Select State" })
                        </div>*@
                     
                    </div> 
                    <div class="span12" style="margin-left: -1px">
                        <div class="span7" style="margin-top: 6px">
                            <input id="cityTypeId" name="cityTypeId"/>
                        </div>
                        <div class="span5 pull-right">
                            @Html.TextBoxFor(model => model.zip, new { placeholder = "Zip 99999", style = "width:90px;margin-top:5px" })
                        </div>
                    </div>
                        @Html.TextBoxFor(model => model.phone, new { placeholder = "Phone (999) 999-9999", style = "width:190px;margin-top:-2px" })
 
                        @Html.TextBoxFor(model => model.fax, new { placeholder = "Fax (999) 999-9999 ", style = "width:190px;margin-top:-2px" })

                </div>


            </div>
            <div id="addNewImage"></div>
    
    <input hidden="hidden" id="loadFile0" type="file" name="UploadImage" accept="image/*" />
       
             
    <div class="row" style="margin-left: 5px;">
        
        <div id="galleria" style="height:225px;width:65%">
              <img src="~/Images/houseImage.jpg">
                   
        </div>
        <br />
    </div>
    <div class="row pull-left" style="margin-left: 5px;">
        <a value="" id="addImage" class="btn btn-primary pull-right" style="margin:3px;" onclick="addPic2()"  >Add Image</a>
        <a value="" id="removeImage" class="btn btn-danger pull-right" style="margin:3px;" onclick="removePic()"  >Remove Image</a>
    </div>
    <br /><br />
            <div style="border: inset; border-color: #808080; height: 210px; border-radius: 6px; margin-bottom: 5px">
                <b style="font-size: medium; font-style: italic; margin: 10px; padding: 5px; border-bottom: 1px solid #ccc;">Description</b>
                <div style="margin: 5px; margin-left: 10px;">
                    <p>
                        @Html.TextAreaFor(model => model.description, new { rows = 7, style = "width:95%" })
                    </p>
                </div>
            </div>
            <div style="border: inset; border-color: #808080; height: 30px; border-radius: 6px; padding: 10px;">
                <a  class="btn btn-info" href="@Url.Action("Index")">Back</a>
                <input value="Submit" type="submit" class="btn btn-success pull-right" />
            </div>
        </div>
        <div class="span4" style="border: inset; border-color: #808080; height: 150px; border-radius: 6px; padding: 10px;">
            <b> Property Type: </b>
            <div class="info" style="align-content:center"> 
               @* @Html.TextBoxFor(model => model.propertyType, new {  Class = "input-medium", id = Model.propertyType })*@
                @Html.Action("DropDownList", new { id = Model.propertyTypeId, propertyName = "propertyTypeId", propertyType = typeof(PropertyTypeVo) })
            </div>
            <b> Listing Type: </b>
            <div class="info" style="align-content:center">
               @*  @Html.TextBoxFor(model => model.propertyListingTypeId, new {  Class = "input-medium", id = Model.propertyListingTypeId })*@
                @Html.Action("DropDownList", new { id = Model.propertyListingTypeId, propertyName = "propertyListingTypeId", propertyType = typeof(PropertyListingTypeVo) })
            </div>

        </div>
       
    </div>
}
